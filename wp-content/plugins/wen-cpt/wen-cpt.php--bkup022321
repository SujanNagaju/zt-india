<?php
/**
 * Plugin Name: WEN CPT
 * Description: For custom post types used in site.
 * Version: 1.0.0
 * Author: WEN
 */

 if( ! function_exists( 'ferras_agency_cpts' ) ) :

	/**
	 * Registers a new post type
	 * @uses $wp_post_types Inserts new post type object into the list
	 *
	 * @param string  Post type key, must not exceed 20 characters
	 * @param array|string  See optional args description above.
	 * @return object|WP_Error the registered post type object, or an error object
	 */
function ferras_agency_cpts(){

	$ferras_agency_cpts = array(
		array(
		  'slug'         	=> 'portfolio',
		  'singular_name'  	=> 'Portfolio',
		  'plural_name'  	=> 'Portfolios',
		  'post_type'    	=> 'portfolios',
		  'post_icon'    	=> 'dashicons-portfolio',
		  'supports'		=> array( 'editor','title', 'page-attributes', 'thumbnail' ),
		  'has_single'		=> true
		),
		array(
		  'slug'         	=> 'service',
		  'singular_name'  	=> 'Service',
		  'plural_name'  	=> 'Services',
		  'post_type'    	=> 'services',
		  'post_icon'    	=> 'dashicons-admin-generic',
		  'supports'		=> array( 'editor','title', 'page-attributes', 'thumbnail' ),
		  'has_single'		=> true
		),
		array(
		  'slug'         	=> 'team',
		  'singular_name'  	=> 'Team',
		  'plural_name'  	=> 'Teams',
		  'post_type'    	=> 'teams',
		  'post_icon'    	=> 'dashicons-groups',
		  'supports'		=> array( 'editor','title', 'page-attributes' ),
		  'has_single'		=> false
		),

	);

	  foreach($ferras_agency_cpts as $ferras_agency_cpt){
		  $args = array(
				'labels' => array(
					'name' => $ferras_agency_cpt['plural_name'],
					'singular_name' => $ferras_agency_cpt['singular_name'],
					'add_new' => 'Add New',
					'add_new_item' => 'Add New '.$ferras_agency_cpt['singular_name'],
					'edit_item' => 'Edit '.$ferras_agency_cpt['singular_name'],
					'new_item' => 'New '.$ferras_agency_cpt['singular_name'],
					'all_items' => 'All '.$ferras_agency_cpt['plural_name'],
					'view_item' => 'View '.$ferras_agency_cpt['singular_name'],
					'search_items' => 'Search '.$ferras_agency_cpt['plural_name'],
					'not_found' =>  'No '.$ferras_agency_cpt['plural_name'].' found',
					'not_found_in_trash' => 'No '.$ferras_agency_cpt['plural_name'].' found in Trash',
					'menu_name' => $ferras_agency_cpt['plural_name']
				),
				'public' => true,
				'menu_icon' => $ferras_agency_cpt['post_icon'],
				'publicly_queryable' => true,
				'show_ui' => true,
				'show_in_menu' => true,
				'query_var' => $ferras_agency_cpt['has_single'],
				'rewrite' => array( 'slug' => $ferras_agency_cpt['slug'] ),
				'capability_type' => 'post',
				'has_archive' => true,
				'hierarchical' => true,
				'menu_position' => null,
				'supports' => $ferras_agency_cpt['supports'],
			);
		  
		  register_post_type( $ferras_agency_cpt['post_type'], $args);
	  }
}
	
	add_action( 'init', 'ferras_agency_cpts' );



	
endif;
	

	/**
 * [vcTeachregisterTaxonomy register custom taxonomy]
 * @return [type] [init]
 */
function ferrasregisterTaxonomy() {

	$ferraspostTaxonomies = array(
		array(
		  'slug'         	=> 'service-categories',
		  'front_slug'     	=> 'service-cats',
		  'singular_name'  	=> 'Service Category',
		  'name'  			=> 'Service Categories',
		  'post_type'    	=> 'services',
		)
	);


	foreach($ferraspostTaxonomies as $ferraspostTaxonomy){
		register_taxonomy($ferraspostTaxonomy['slug'], $ferraspostTaxonomy['post_type'], array(
			// Hierarchical taxonomy (like categories)
			'hierarchical' => true,
			// This array of options controls the labels displayed in the WordPress Admin UI
			'labels' => array(
				'name' => _x( $ferraspostTaxonomy['name'], $ferraspostTaxonomy['name'] ),
				'singular_name' => _x( $ferraspostTaxonomy['singular_name'], $ferraspostTaxonomy['singular_name'] ),
				'search_items' =>  __( 'Search '.$ferraspostTaxonomy['name'] ),
				'all_items' => __( 'All '.$ferraspostTaxonomy['name'] ),
				'parent_item' => __( 'Parent '.$ferraspostTaxonomy['name'] ),
				'parent_item_colon' => __( 'Parent '.$ferraspostTaxonomy['name'] ),
				'edit_item' => __( 'Edit '.$ferraspostTaxonomy['name'] ),
				'update_item' => __( 'Update '.$ferraspostTaxonomy['name'] ),
				'add_new_item' => __( 'Add New '.$ferraspostTaxonomy['name'] ),
				'new_item_name' => __( 'New '.$ferraspostTaxonomy['name'].' Name' ),
				'menu_name' => __( $ferraspostTaxonomy['name'] ),
			),

			// Control the slugs used for this taxonomy
			'rewrite' => array(
				'slug' => $ferraspostTaxonomy['front_slug'], // This controls the base slug that will display before each term
				'with_front' => false, // Don't display the category base before "/locations/"
				'hierarchical' => true // This will allow URL's like "/locations/boston/cambridge/"
			),
		));
	}
}
add_action( 'init', 'ferrasregisterTaxonomy', 0 );